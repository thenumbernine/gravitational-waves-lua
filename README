Hyperbolic formalism of GR simulation.

Requires my lua-ext, symmath-lua, and optionally lua-glapp, and the Malkia UFO ffi lua files for the OpenGL display.
There's a text-based version you can uncomment that will run it to the command-line if you don't want to bother set up the GL stuff.

ADM1D3VarSim is based on my attempt to implement the formalism described in Alcubierre's "Introduction to 3+1 Numerical Relativity".
Specifically, a 3-variable hyperbolic system with lapse (alpha) and metric (g) separated from the state variable computations.
It doesn't work.

ADM1D5VarSim is a hyperbolic sim based on Alcubierre's "The appearance of coordinate shocks in hyperbolic formalisms of General Relativity"
found here: http://arxiv.org/pdf/gr-qc/9609015v2.pdf
It works.  Oh yeah.  I plugged in all 5 variables to a Roe solver and ... *drumroll* computed my own eigenbasis.
I still need to figure out how to use the paper's listed eigenfields in my hyperbolic simulation.  The eigenfield math looks cleaner so I'm betting there's an easier implementation I haven't found out yet.

ADM2DSphericalSimulation is the spherical solution in the same paper mentioned above.
Figured out that the paper's, "eigenfields" is an inner product with the variable basis and the row vectors that make up the inverse of the eigenvector matrix. 

EulerSim is the Euler hydrodynamic equations I used as a test-case to verify the Roe solver was working.  Good ol' Euler fluid equations.

What's next?  Probably the Schwarzschild simulation and then on to a cartesian 2D/3D or spherical 3D simulation.

